
create database Test_db ;
use test_db ;

create table if not exists employee (
id int,
name varchar(20),
age int,
hiring_date date,
salary int,
city varchar(20)
);

insert into employee values (1,'shasank',24,'2021-10-12',11000,'lucknow');
insert into employee values (2,'rahul',25,'2021-08-10',20000,'khajuraho');
insert into employee values (3,'sunny',26,'2021-08-11',11000,'Banglore'),
                            (5,'Amith',25,'2021-08-11',12000,'Noida'),
							(1,'Puneet',26,'2021-08-12',50000,'Gurgron');

select * from employee ;
update employee set age = 20 , salary = 25000 where hiring_date = '2021-08-10' ;

-- Creating table with Auto Increment column.

use test_db ;
create table auto_inc_exp (
id int key auto_increment,
name varchar(20)
);
insert into auto_inc_exp(name) values ('shiva'),('durga'),('prasad');
select * from auto_inc_exp ;

-- use of limit key 
select * from employee limit 2;

-- sorting Data by 'order by' clause ;
select * from employee order by name ;
select * from employee order by name desc ;

-- Display employee data in desc order of salary and if salaries are same for more than one employee
-- arrange their data in asc order of name

select * from employee 
order by salary desc, name desc ;

-- write a query to find the maximum salary of the employee
select * from employee order by salary desc limit 1 ;
select * from employee where salary in (select max(salary) from employee );

-- write a query to find the details of employee for minimum salary
select * from employee order by salary asc limit 1 ;

-- conditional operators -->   <, >, <= ,>=, <>
-- logical operators ------>  AND / OR

-- list all employees who are getting salary more than 20,000.
select * from employee where salary > 20000 ;

-- list all employees who are getting salary greater  than or equal to  20,000.
select * from employee where salary >= 20000 ;

-- list all employees who are getting salary less than 20,000.
select * from employee where salary < 20000 ;

-- list all employees who are getting salary less than or equal to  20,000.
select * from employee where salary <= 20000 ;

-- filter the records of employees where age of employee is equal to 20.
select * from employee where age = 20 ;

-- filter the records of employees where age of employee is not equal to 20.
select * from employee where age <> 20 ;

-- find those employees who joined company on 11- august-2021 and their salary is less than 11,500.

select * from employee 
where hiring_date = '2021-08-11' and salary < 11500;

-- find those employees who joined company after 11- august-2021 0r their salary is less than 20000.

select * from employee 
where hiring_date > '2021-08-11' or salary < 20000;

-- how to use between operation in where clause
-- get all employees of data who joined in company between hiring date 2021-08-05 to 2021-08-11
select * from employee where hiring_date between '2021-08-05' and '2021-08-11' ;
select * from employee where hiring_date >= '2021-08-05' and hiring_date <= '2021-08-11' ;

-- selcet all employees data who getting salary in the range of 11000 to 25000 
select * from employee where salary between 11000 and 25000 ;
select * from employee where salary >=11000 and salary <= 25000;

-- How to use Like Operation in where clause 
-- % --> for zero,one,more than one character
-- _ --> for only one character

-- find the employee whose name starts with 's'.
select * from employee where name like 's%' ; 

-- find the employee whose name ends with 't'.
select * from employee where name like '%t';

-- find the employee whose name is havig 'neet' .
select * from employee where name like '%neet%' ;

-- find the employee whose name starts with 's' and ends with 'k'.
select * from employee where name like 's%k' ;

-- get all those employee whose  name is having  5 characters only .
select * from employee where name like '_____' ;
select * from employee where length(name) = 5;

-- get the details of the employees whose name having atleast 6 charcters.
select * from employee where name like '%______%' ;
-- find the employee whose name having 

-- how to use is null or is not null in the where clause ;
-- adding null values in the table to do the experiments on null.

insert into employee values (10,'kapil',null,'2021-08-10',10000,'Assam'),  
							(11,'Nikhil',30,'2021-08-10',null,'Assam');
                            
select * from employee ;

-- get all those employees where age value is null.
select * from employee where age is null ;

-- get all those employees where salary value is not null ;
select * from employee where salary is not null ;

-- table and data for Group by
 create table orders_data (
 Cust_id int,
 Order_id int,
 country varchar(20),
 sate varchar(20)
 );

insert into orders_data values (1,100,'USA','Adilaid'),
								(2,101,'INDIA','AP'),
                                (2,103,'INDIA','UP'),
                                (4,108,'USA','WDC'),
                                (5,109,'UK','London'),
                                (4,110,'USA','London'),
                                (3,120,'INDIA','AP'),
                                (2,121,'INDIA','GOA'),
                                (1,131,'USA','Seattle'),
                                (6,142,'USA','SEATTLE'),
                                (7,150,'USA','SEATTLE');
                                
select * from orders_data ;

-- calculate total orders placed country wise
select country ,count(*) from orders_data group by country ;

select * from employee ;
update employee set salary = 15000, age =22 where id = 11;

-- write a query to find the total salary by each age group
select age,sum(salary) as Total_salary_By_AGE from employee group by age ;

-- calcluate differenet aggregated matrices on salary By Grouping the AGE
select age,sum(salary) as total_Salary_By_Age,
		max(salary) as max_salary_by_age,
        min(salary) as Min_salary_By_Age,
        count(*) as No_of_employees_By_Age,
        Avg(salary) as Avg_salary_BY_age from employee
        Group by age;
